/* Import Google Fonts */
@import url('https://fonts.googleapis.com/css2?family=Quicksand:wght@300;400;500;600;700&family=Nunito:wght@200;300;400;500;600;700;800;900&display=swap');

@tailwind base;
@tailwind components;
@tailwind utilities;

/* Custom scrollbar hide utility */
.scrollbar-hide {
  -ms-overflow-style: none;
  scrollbar-width: none;
}
.scrollbar-hide::-webkit-scrollbar {
  display: none;
}

/* Reset and base styles */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html {
  font-family: 'Nunito', system-ui, -apple-system, sans-serif;
  line-height: 1.5;
  font-weight: 400;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

body {
  margin: 0;
  min-height: 100vh;
  background-color: #ffffff;
  color: #1f2937;
  overflow-x: hidden; /* Prevent horizontal scroll during transitions */
}

#root {
  min-height: 100vh;
  width: 100%;
}

/* Remove default button styles to let Tailwind handle them */
button {
  border: none;
  background: none;
  font-family: inherit;
  cursor: pointer;
}

/* Remove default link styles to let Tailwind handle them */
a {
  text-decoration: none;
  color: inherit;
}

/* Page transition loading state */
.page-loading {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(135deg, #ecfdf5, #f3e8ff, #eff6ff);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 9999;
}

.page-loading::before {
  content: '';
  width: 40px;
  height: 40px;
  border: 3px solid #10b981;
  border-top: 3px solid transparent;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

/* Smooth transitions for all interactive elements */
.transition-smooth {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Enhanced focus states for accessibility */
button:focus-visible,
a:focus-visible {
  outline: 2px solid #10b981;
  outline-offset: 2px;
  border-radius: 4px;
}

/* Prevent layout shift during transitions */
.transition-container {
  position: relative;
  width: 100%;
  min-height: 100vh;
}

/* Landing Page Custom Styles */
.radar-ring {
  position: absolute;
  border: 2px solid rgba(34, 197, 94, 0.3);
  border-radius: 50%;
  width: 300px;
  height: 300px;
  animation: radar-pulse 3s infinite;
}

.delay-1000 {
  animation-delay: 1s;
}

.delay-2000 {
  animation-delay: 2s;
}

.delay-500 {
  animation-delay: 0.5s;
}

@keyframes radar-pulse {
  0% {
    transform: scale(0.5);
    opacity: 1;
  }
  100% {
    transform: scale(2);
    opacity: 0;
  }
}

/* Background Animation Options */

/* Option 1: Floating Particles */
.floating-particles {
  position: absolute;
  width: 100%;
  height: 100%;
  pointer-events: none;
}

.particle {
  position: absolute;
  width: 4px;
  height: 4px;
  background: rgba(16, 185, 129, 0.3);
  border-radius: 50%;
  animation: float 20s infinite linear;
}

.particle-1 { top: 20%; left: 10%; animation-delay: 0s; }
.particle-2 { top: 40%; left: 80%; animation-delay: -5s; }
.particle-3 { top: 60%; left: 30%; animation-delay: -10s; }
.particle-4 { top: 80%; left: 70%; animation-delay: -15s; }
.particle-5 { top: 30%; left: 50%; animation-delay: -8s; }
.particle-6 { top: 70%; left: 20%; animation-delay: -12s; }

@keyframes float {
  0% {
    transform: translateY(100vh) rotate(0deg);
    opacity: 0;
  }
  10% {
    opacity: 1;
  }
  90% {
    opacity: 1;
  }
  100% {
    transform: translateY(-100px) rotate(360deg);
    opacity: 0;
  }
}

/* Option 2: Geometric Grid */
.geometric-grid {
  position: absolute;
  width: 100%;
  height: 100%;
  pointer-events: none;
}

.grid-dot {
  position: absolute;
  width: 2px;
  height: 2px;
  background: rgba(16, 185, 129, 0.4);
  border-radius: 50%;
  animation: pulse-dot 4s infinite ease-in-out;
}

.grid-dot-1 { top: 25%; left: 15%; animation-delay: 0s; }
.grid-dot-2 { top: 45%; left: 85%; animation-delay: 1s; }
.grid-dot-3 { top: 65%; left: 25%; animation-delay: 2s; }
.grid-dot-4 { top: 35%; left: 65%; animation-delay: 3s; }
.grid-dot-5 { top: 75%; left: 75%; animation-delay: 1.5s; }

@keyframes pulse-dot {
  0%, 100% {
    opacity: 0.2;
    transform: scale(1);
  }
  50% {
    opacity: 0.8;
    transform: scale(1.5);
  }
}

/* Option 3: Gradient Mesh */
.gradient-mesh {
  position: absolute;
  width: 100%;
  height: 100%;
  pointer-events: none;
}

.mesh-layer {
  position: absolute;
  border-radius: 50%;
  filter: blur(40px);
  animation: mesh-float 15s infinite ease-in-out;
}

.mesh-1 {
  top: 10%;
  left: 20%;
  width: 300px;
  height: 300px;
  background: linear-gradient(45deg, rgba(16, 185, 129, 0.1), rgba(139, 69, 19, 0.1));
  animation-delay: 0s;
}

.mesh-2 {
  top: 50%;
  right: 20%;
  width: 250px;
  height: 250px;
  background: linear-gradient(135deg, rgba(147, 51, 234, 0.1), rgba(59, 130, 246, 0.1));
  animation-delay: -5s;
}

.mesh-3 {
  bottom: 20%;
  left: 40%;
  width: 200px;
  height: 200px;
  background: linear-gradient(225deg, rgba(236, 72, 153, 0.1), rgba(16, 185, 129, 0.1));
  animation-delay: -10s;
}

@keyframes mesh-float {
  0%, 100% {
    transform: translateY(0px) rotate(0deg);
  }
  33% {
    transform: translateY(-20px) rotate(120deg);
  }
  66% {
    transform: translateY(10px) rotate(240deg);
  }
}
